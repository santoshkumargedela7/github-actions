package com.db.operations.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.vault.authentication.AppRoleAuthentication;
import org.springframework.vault.authentication.AppRoleAuthenticationOptions;
import org.springframework.vault.client.VaultEndpoint;
import org.springframework.vault.config.AbstractVaultConfiguration;
import org.springframework.vault.core.VaultOperations;
import org.springframework.vault.core.VaultTemplate;
import org.springframework.vault.support.ClientOptions;
import org.springframework.vault.support.SslConfiguration;
import org.springframework.vault.support.VaultToken;

@Configuration
public class VaultConfig extends AbstractVaultConfiguration {

	@Value("${vault.auth.roleId}")
	private String roleId;

	@Value("${vault.auth.secretId}")
	private String secretId;

	@Override
	public VaultEndpoint vaultEndpoint() {
		return VaultEndpoint.create("https://vault-uat.sc.net", 8200);
	}

	@Override
	public ClientOptions clientOptions() {
		return new ClientOptions();
	}

	@Override
	public SslConfiguration sslConfiguration() {
		return SslConfiguration.unconfigured();
	}

	@Bean
	public VaultOperations vaultTemplate(VaultToken vaultToken) {
		return new VaultTemplate(vaultEndpoint(), clientAuthentication());
	}

	@Bean
	public AppRoleAuthentication clientAuthentication() {
		AppRoleAuthenticationOptions options = AppRoleAuthenticationOptions.builder()
				.roleId(AppRoleAuthenticationOptions.RoleId.provided(roleId))
				.secretId(AppRoleAuthenticationOptions.SecretId.provided(secretId)).build();
		return new AppRoleAuthentication(options, restOperations());
	}

}
